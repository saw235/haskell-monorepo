load("@rules_haskell//haskell:defs.bzl", "haskell_binary")

haskell_binary(
    name = "nike-scraper",
    srcs = [
        "Main.hs",
        "src/Nike/Data.hs",
        "src/Nike/Scraper.hs",
        "src/Nike/NavScraper.hs",
    ],
    visibility = ["//visibility:public"],
    deps = [
        # Per user instruction, //:base is the correct dependency.
        "//:base",
        "@stackage//:scalpel",
        "@stackage//:scalpel-core",
        "@stackage//:attoparsec",
        "@stackage//:webdriver",
        "@stackage//:text",
        "@stackage//:aeson",
        "@stackage//:optparse-applicative",
        "@stackage//:bytestring",
        "@stackage//:aeson-pretty",
        "@stackage//:containers",
    ],
    # Pass --no-headless to run in non-headless mode: bazel run //haskell/app/nike-scraper -- --no-headless
    args = [],
)

# Generate a wrapper script with the JAR path substituted at build time
genrule(
    name = "nike-scraper-wrapper",
    srcs = ["run_with_selenium.sh"],
    tools = ["//external/selenium:selenium_server_jar"],
    outs = ["nike-scraper-with-selenium.sh"],
    cmd = """
        sed 's|SELENIUM_JAR_PLACEHOLDER|$(location //external/selenium:selenium_server_jar)|g' \
            $(location run_with_selenium.sh) > $@
        chmod +x $@
    """,
)

# Wrapper target that manages Selenium server
sh_binary(
    name = "nike-scraper-with-selenium",
    srcs = [":nike-scraper-wrapper"],
    data = [
        ":nike-scraper",
        "//external/selenium:selenium_server_jar",
    ],
    visibility = ["//visibility:public"],
)